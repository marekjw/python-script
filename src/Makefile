# Makefile generated by BNFC.

GHC        = ghc
HAPPY      = happy
HAPPY_OPTS = --array --info --ghc --coerce
ALEX       = alex
ALEX_OPTS  = --ghc

# List of goals not corresponding to file names.

.PHONY : all clean distclean

# Default goal.

all : PythonScript/Test

# Rules for building the parser.

PythonScript/Abs.hs PythonScript/Lex.x PythonScript/Par.y PythonScript/Print.hs PythonScript/Test.hs : ../grammar/PythonScript.cf
	bnfc --haskell -d ../grammar/PythonScript.cf

%.hs : %.y
	${HAPPY} ${HAPPY_OPTS} $<

%.hs : %.x
	${ALEX} ${ALEX_OPTS} $<

PythonScript/Test : PythonScript/Abs.hs PythonScript/Lex.hs PythonScript/Par.hs PythonScript/Print.hs PythonScript/Test.hs
	${GHC} ${GHC_OPTS} $@

# Rules for cleaning generated files.

clean :
	-rm -f PythonScript/*.hi PythonScript/*.o PythonScript/*.log PythonScript/*.aux PythonScript/*.dvi

distclean : clean
	-rm -f PythonScript/Abs.hs PythonScript/Abs.hs.bak PythonScript/ComposOp.hs PythonScript/ComposOp.hs.bak PythonScript/Doc.txt PythonScript/Doc.txt.bak PythonScript/ErrM.hs PythonScript/ErrM.hs.bak PythonScript/Layout.hs PythonScript/Layout.hs.bak PythonScript/Lex.x PythonScript/Lex.x.bak PythonScript/Par.y PythonScript/Par.y.bak PythonScript/Print.hs PythonScript/Print.hs.bak PythonScript/Skel.hs PythonScript/Skel.hs.bak PythonScript/Test.hs PythonScript/Test.hs.bak PythonScript/XML.hs PythonScript/XML.hs.bak PythonScript/AST.agda PythonScript/AST.agda.bak PythonScript/Parser.agda PythonScript/Parser.agda.bak PythonScript/IOLib.agda PythonScript/IOLib.agda.bak PythonScript/Main.agda PythonScript/Main.agda.bak PythonScript/PythonScript.dtd PythonScript/PythonScript.dtd.bak PythonScript/Test PythonScript/Lex.hs PythonScript/Par.hs PythonScript/Par.info PythonScript/ParData.hs Makefile
	-rmdir -p PythonScript/

# EOF
